<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Project Requirements Survey</title>
</head>
<body>
  <h1 id="formTitle"></h1>
  <p id="formDescription"></p>
  <form id="surveyForm"></form>

  <script>
    const formSchema = {
      "formTitle": "Project Requirements Survey",
      "formDescription": "Please fill out this survey about your project needs",
      "fields": [
        {
          "id": "name",
          "type": "text",
          "label": "Full Name",
          "required": true,
          "placeholder": "Enter your full name"
        },
        {
          "id": "email",
          "type": "email",
          "label": "Email Address",
          "required": true,
          "placeholder": "you@example.com",
          "validation": {
            "pattern": "^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$",
            "message": "Please enter a valid email address"
          }
        },
        {
          "id": "companySize",
          "type": "select",
          "label": "Company Size",
          "required": true,
          "options": [
            { "value": "1-50", "label": "1-50 employees" },
            { "value": "51-200", "label": "51-200 employees" },
            { "value": "201-1000", "label": "201-1000 employees" },
            { "value": "1000+", "label": "1000+ employees" }
          ]
        },
        {
          "id": "industry",
          "type": "radio",
          "label": "Industry",
          "required": true,
          "options": [
            { "value": "tech", "label": "Technology" },
            { "value": "healthcare", "label": "Healthcare" },
            { "value": "finance", "label": "Finance" },
            { "value": "retail", "label": "Retail" },
            { "value": "other", "label": "Other" }
          ]
        },
        {
          "id": "timeline",
          "type": "select",
          "label": "Project Timeline",
          "required": true,
          "options": [
            { "value": "immediate", "label": "Immediate (within 1 month)" },
            { "value": "short", "label": "Short-term (1-3 months)" },
            { "value": "medium", "label": "Medium-term (3-6 months)" },
            { "value": "long", "label": "Long-term (6+ months)" }
          ]
        },
        {
          "id": "comments",
          "type": "textarea",
          "label": "Additional Comments",
          "required": false,
          "placeholder": "Any other details you'd like to share..."
        }
      ]
    };

    function createForm(formSchema) {
      document.getElementById("formTitle").textContent = formSchema.formTitle;
      document.getElementById("formDescription").textContent = formSchema.formDescription;

      const form = document.getElementById("surveyForm");

      formSchema.fields.forEach(field => {
        const wrapper = document.createElement("div");

        const label = document.createElement("label");
        label.textContent = field.label;
        label.htmlFor = field.id;
        wrapper.appendChild(label);

        let input;
        if (field.type === "select") {
          input = document.createElement("select");
          field.options.forEach(option => {
            const opt = document.createElement("option");
            opt.value = option.value;
            opt.textContent = option.label;
            input.appendChild(opt);
          });
        } else if (field.type === "radio") {
          field.options.forEach(option => {
            const radioWrapper = document.createElement("div");
            const radio = document.createElement("input");
            radio.type = "radio";
            radio.id = `${field.id}_${option.value}`;
            radio.name = field.id;
            radio.value = option.value;

            const radioLabel = document.createElement("label");
            radioLabel.htmlFor = radio.id;
            radioLabel.textContent = option.label;

            radioWrapper.appendChild(radio);
            radioWrapper.appendChild(radioLabel);
            wrapper.appendChild(radioWrapper);
          });
          input = null;
        } else if (field.type === "textarea") {
          input = document.createElement("textarea");
          input.placeholder = field.placeholder;
        } else {
          input = document.createElement("input");
          input.type = field.type;
          input.placeholder = field.placeholder;
          if (field.type === "email" && field.validation) {
            input.pattern = field.validation.pattern;
            input.title = field.validation.message;
          }
        }

        if (input) {
          input.id = field.id;
          input.required = field.required;
          wrapper.appendChild(input);
        }

        form.appendChild(wrapper);
      });

      const submitButton = document.createElement("button");
      submitButton.type = "submit";
      submitButton.textContent = "Submit";
      form.appendChild(submitButton);
    }

    createForm(formSchema);
  </script>
</body>
</html>
